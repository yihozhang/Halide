; prog +=  R"***(

(ruleset keep-best)
(rule () ((keep-best __INPUTS__ "AMXShape" "AMXAllocation" "CommBop" "AddOrSub")) :ruleset keep-best)

(run-schedule 
    (repeat 10
        (saturate (run typechecking))
        (run)))
(run-schedule (saturate 
    (saturate (run typechecking))
    (run push-down-vector-reduce)))

(keep-best __INPUTS__ "AMXShape" "AMXAllocation" "CommBop" "AddOrSub")

(run-schedule (repeat 15
    (saturate (run typechecking))
    (repeat 1 (run))
    ))
(run-schedule (repeat 20
    (saturate (run typechecking))
    (repeat 1 (run canonicalize))
    ))
(run-schedule (saturate
    (saturate (run typechecking))
    (repeat 1 (run assemble))
    ))
(run-schedule (repeat 12
    (saturate (run typechecking))
    (repeat 1 (run))
    ))

(ruleset subsume-invalid-exprs)

; (rule (
;     (AMX2Mem e)
; ) (
;     (subsume (AMX2Mem e))
; ) :ruleset subsume-invalid-exprs)

; (rule (
;     (Mem2AMX e)
; ) (
;     (subsume (Mem2AMX e))
; ) :ruleset subsume-invalid-exprs)

; (rule (
;     (Cast t1 e)
;     (= e (Call "tile_matmul" t2 args))
; ) (
;     (subsume (Cast t1 e))
; ) :ruleset subsume-invalid-exprs)

; (run-schedule (saturate subsume-invalid-exprs))

; )***"; prog += "\n";
